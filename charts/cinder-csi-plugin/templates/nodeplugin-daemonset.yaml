kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: {{ include "cinder-csi.name" . }}-nodeplugin
  labels:
    {{- include "cinder-csi.nodeplugin.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "cinder-csi.nodeplugin.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "cinder-csi.nodeplugin.labels" . | nindent 8 }}
    spec:
      tolerations:
        - operator: Exists
      serviceAccount: csi-cinder-node-sa
      hostNetwork: true
      containers:
        - name: node-driver-registrar
          image: "{{ .Values.csi.nodeDriverRegistrar.image.repository }}:{{ .Values.csi.nodeDriverRegistrar.image.tag }}"
          imagePullPolicy: {{ .Values.csi.nodeDriverRegistrar.image.pullPolicy }}
          args:
            - "--csi-address=$(ADDRESS)"
            - "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "rm -rf /registration/cinder.csi.openstack.org /registration/cinder.csi.openstack.org-reg.sock"]
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/plugins/cinder.csi.openstack.org/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
        - name: liveness-probe
          image: "{{ .Values.csi.livenessprobe.image.repository }}:{{ .Values.csi.livenessprobe.image.tag }}"
          imagePullPolicy: {{ .Values.csi.livenessprobe.image.pullPolicy }}
          args:
            - --csi-address=/csi/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: cinder-csi-plugin
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          image: "{{ .Values.csi.plugin.image.repository }}:{{ .Values.csi.plugin.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.csi.plugin.image.pullPolicy }}
          args:
            - /bin/cinder-csi-plugin
            - "--nodeid=$(NODE_ID)"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--cloud-config=$(CLOUD_CONFIG)"
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix://csi/csi.sock
            - name: CLOUD_CONFIG
              value: /etc/kubernetes/cloud-config
          ports:
            - containerPort: 9808
              name: healthz
              protocol: TCP
          # The probe
          livenessProbe:
            failureThreshold: {{ .Values.csi.livenessprobe.failureThreshold }}
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: {{ .Values.csi.livenessprobe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.csi.livenessprobe.timeoutSeconds }}
            periodSeconds: {{ .Values.csi.livenessprobe.periodSeconds }}
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: kubelet-dir
              mountPath: /var/lib/kubelet
              mountPropagation: "Bidirectional"
            - name: pods-probe-dir
              mountPath: /dev
              mountPropagation: "HostToContainer"
            {{- .Values.csi.plugin.volumeMounts | toYaml | trimSuffix "\n" | nindent 12 }}
      volumes:
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/cinder.csi.openstack.org
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
        - name: kubelet-dir
          hostPath:
            path: /var/lib/kubelet
            type: Directory
        # - name: pods-cloud-data
        #   hostPath:
        #     path: /var/lib/cloud/data
        #     type: Directory
        - name: pods-probe-dir
          hostPath:
            path: /dev
            type: Directory
        - name: cloud-config
        {{- if .Values.secret.enabled }}
          secret:
            secretName: {{ .Values.secret.name }}
        {{- else }}
          hostPath:
            path: /etc/kubernetes
        {{- end }}
        {{ .Values.csi.plugin.volumes | toYaml | trimSuffix "\n" | nindent 8 }}
